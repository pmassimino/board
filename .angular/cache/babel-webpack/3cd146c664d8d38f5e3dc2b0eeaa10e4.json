{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport let AuthInterceptorService = /*#__PURE__*/(() => {\n  class AuthInterceptorService {\n    constructor(router) {\n      this.router = router;\n    }\n\n    intercept(req, next) {\n      const token = localStorage.getItem('access_token');\n      let request = req;\n\n      if (token) {\n        request = req.clone({\n          headers: req.headers.set(\"Authorization\", 'Bearer ' + token)\n        });\n        request = req.clone({\n          headers: request.headers.set('IdEmpresa', 'dc76597f-c02a-43fd-ba7e-52d2ca288226')\n        });\n      }\n\n      console.log(request);\n      return next.handle(request).pipe(catchError(err => {\n        if (err.status === 401) {\n          this.router.navigateByUrl('/login');\n        }\n\n        return throwError(err);\n      }));\n    }\n\n  }\n\n  AuthInterceptorService.ɵfac = function AuthInterceptorService_Factory(t) {\n    return new (t || AuthInterceptorService)(i0.ɵɵinject(i1.Router));\n  };\n\n  AuthInterceptorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptorService,\n    factory: AuthInterceptorService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthInterceptorService;\n})();","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let TiempoService = /*#__PURE__*/(() => {\n  class TiempoService {\n    constructor(http) {\n      this.http = http;\n      this.base = \"https://api.tutiempo.net/json/\";\n    }\n\n    get(apiID, idLocalidad) {\n      return this.http.get(this.base + '?lan=es&apid=' + apiID + '&lid=' + idLocalidad).pipe(catchError(this.handleError));\n    }\n\n    handleError(error) {\n      let errorMessage = 'Unknown error!';\n\n      if (error.error instanceof ErrorEvent) {\n        // Client-side errors\n        errorMessage = `Error: ${error.error.message}`;\n      } else {\n        // Server-side errors\n        errorMessage = `Error Code: ${error.message}\\nMessage: ${error.message}\\Descripcion: ${error.error}`;\n      }\n\n      return throwError(error);\n    }\n\n  }\n\n  TiempoService.ɵfac = function TiempoService_Factory(t) {\n    return new (t || TiempoService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  TiempoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TiempoService,\n    factory: TiempoService.ɵfac,\n    providedIn: 'root'\n  });\n  return TiempoService;\n})();","map":null,"metadata":{},"sourceType":"module"}